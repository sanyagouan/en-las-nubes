# Configuración Nginx optimizada para producción en Coolify VPS
# En las Nubes Restobar - Alto rendimiento y seguridad

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimizaciones para VPS
worker_rlimit_nofile 65535;
timer_resolution 100ms;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ========================================
    # LOGS Y FORMATOS
    # ========================================

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'request_time=$request_time '
                       'upstream_response_time=$upstream_response_time';

    access_log /var/log/nginx/access.log main;

    # ========================================
    # OPTIMIZACIONES DE RENDIMIENTO
    # ========================================

    # Optimizaciones básicas
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes optimizados para VPS
    client_body_buffer_size 128k;
    client_max_body_size 20m;
    client_header_buffer_size 3k;
    large_client_header_buffers 4 256k;
    client_body_timeout 60;
    client_header_timeout 60;
    send_timeout 60;

    # Optimización de archivos estáticos
    open_file_cache max=10000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;

    # Gzip optimizado
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Brotli (si está disponible)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # ========================================
    # SEGURIDAD
    # ========================================

    # Ocultar versión de nginx
    server_tokens off;

    # Límites de seguridad
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

    # Protección contra bad requests
    ignore_invalid_headers on;
    server_name_in_redirect off;

    # ========================================
    # CACHE Y CONTROL DE RECURSOS
    # ========================================

    # Mapa de cache para diferentes tipos de contenido
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  1h;
        text/css                   1y;
        application/javascript     1y;
        application/json           0;
        application/atom+xml       1h;
        application/rss+xml        1h;
        image/svg+xml              1y;
        image/png                  1y;
        image/jpg                  1y;
        image/jpeg                 1y;
        image/gif                  1y;
        image/webp                 1y;
        image/x-icon               1y;
        font/woff                  1y;
        font/woff2                 1y;
        application/font-woff      1y;
        application/font-woff2     1y;
        application/vnd.ms-fontobject 1y;
    }

    # ========================================
    # CABECERAS DE SEGURIDAD
    # ========================================

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;

    # CSP para producción
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com https://fonts.gstatic.com https://cdn.jsdelivr.net;
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net;
        img-src 'self' data: https: blob:;
        font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net;
        connect-src 'self' https://cartamenú.com https://celebrarlo.com https://restaurantguru.com https://www.google-analytics.com;
        media-src 'self' blob:;
        object-src 'none';
        base-uri 'self';
        form-action 'self';
        frame-ancestors 'none';
        upgrade-insecure-requests;
    " always;

    # HSTS (solo si tienes SSL)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # ========================================
    # SERVER BLOCK PRINCIPAL
    # ========================================

    server {
        listen 80;
        listen [::]:80;
        server_name enlasnubes.localhost;

        # Charset
        charset utf-8;

        # Límites de seguridad
        limit_conn addr 10;
        limit_req zone=req_limit_per_ip burst=20 nodelay;

        # Root directory
        root /usr/share/nginx/html;
        index index.html;

        # Endpoint de health check para Coolify
        location /api/health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"ok","timestamp":"$time_iso8601","server":"enlasnubes-web","version":"1.0.0"}';
        }

        # Nginx status para monitor
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16; # Red interna de docker-compose
            deny all;
        }

        # ========================================
        # ROUTING SPA Y PWA
        # ========================================

        # Servir assets estáticos con cache agresiva
        location ~* \.(?:css|js|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot|webp|avif)$ {
            expires $expires;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            add_header Access-Control-Allow-Origin "*";

            # Intentar servir archivos pre-comprimidos
            gzip_static on;
            # brotli_static on;

            try_files $uri =404;
        }

        # Servir archivos de Service Worker sin cache
        location ~* sw\.js$ {
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Service-Worker-Allowed "/";
            try_files $uri =404;
        }

        # Manifest y otros archivos de PWA
        location ~* \.(?:manifest\.json|browserconfig\.xml)$ {
            expires 1d;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
            try_files $uri =404;
        }

        # Router de SPA - fallback a index.html
        location / {
            try_files $uri $uri/ /index.html;

            # Cache para HTML (no agresiva para permitir actualizaciones)
            expires 1h;
            add_header Cache-Control "public, must-revalidate";

            # Seguridad adicional para HTML
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Content-Type-Options "nosniff";
        }

        # ========================================
        # API PROXY (si necesitas proxy a APIs externas)
        # ========================================

        # Proxy para cartamenú.com (con cache)
        location /api/cartamenu/ {
            proxy_pass https://cartamenú.com/api/;
            proxy_ssl_verify off;
            proxy_set_header Host cartamenú.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cache para respuestas de API
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
        }

        # ========================================
        # PÁGINAS DE ERROR PERSONALIZADAS
        # ========================================

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # ========================================
        # SEGURIDAD ADICIONAL
        # ========================================

        # Bloquear accesos a archivos sensibles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Bloquear bots maliciosos
        if ($http_user_agent ~* (bot|crawler|spider|scraper)) {
            return 403;
        }

        # Redirección a HTTPS (descomentar cuando tengas SSL)
        # return 301 https://$server_name$request_uri;
    }

    # ========================================
    # INCLUSIÓN DE CONFIGURACIONES ADICIONALES
    # ========================================

    # Include additional configuration files
    include /etc/nginx/conf.d/*.conf;
}
